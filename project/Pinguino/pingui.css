:root {
  --penguin-face: white;
  --penguin-picorna: orange;
  --penguin-skin: gray;
}

body {
  background: linear-gradient(45deg, rgb(118, 201, 255), rgb(247, 255, 222));
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100vh;
  overflow: hidden; /*Elimina las barras de desplazamiento horizontal y vertical, utilizando sólo una propiedad.*/
}

.left-mountain {
  width: 300px;
  height: 300px;
  background: linear-gradient(rgb(203, 241, 228), rgb(80, 183, 255));
  position: absolute; /*Para evitar que la montaña empuje al elemento .ground, ajuste su posición para que no ocupe espacio en el diseño de la página.*/
  transform: skew(0deg, 44deg);
  z-index: 2; /*nivel de apilamiento de un elemento*/
  margin-top: 100px;
}
/*Para que la montaña se parezca más a una montaña, puede utilizar la función de transformación oblicua, que toma dos argumentos. El primero es un ángulo para sesgar el eje x, y el segundo es un ángulo para sesgar el eje y.
  */

.back-mountain {
  width: 300px;
  height: 300px;
  background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));
  position: absolute;
  z-index: 1;
  transform: rotate(45deg);
  left: 110px;
  top: 225px;
}
.penguin {
  width: 300px;
  height: 300px;
  margin: auto;
  margin-top: 75px;
  z-index: 4;
  position: relative;
}
.penguin-head {
  width: 50%;
  height: 45%;
  background: linear-gradient(45deg, var(--penguin-skin), rgb(239, 240, 228));
  border-top-right-radius: 70%;
  border-top-left-radius: 70%;
  border-bottom-left-radius: 65%;
  border-bottom-right-radius: 65%;
  top: 10%;
  left: 25%;
  z-index: 1;
}

.face {
  width: 60%;
  height: 70%;
  background-color: var(--penguin-face);
  border-top-right-radius: 70%;
  border-top-left-radius: 70%;
  border-bottom-left-radius: 60%;
  border-bottom-right-radius: 60%;
  top: 15%;
}
.face.left {
  left: 5%;
}
.face.right {
  right: 5%;
}
.chin {
  width: 90%;
  height: 70%;
  background-color: var(--penguin-face);
  top: 25%;
  left: 5%;
  border-top-right-radius: 70%;
  border-top-left-radius: 70%;
  border-bottom-left-radius: 100%;
  border-bottom-right-radius: 100%;
}
.eye {
  width: 15%;
  height: 17%;
  background-color: black;
  top: 45%;
  border-top-right-radius: 50%;
  border-top-left-radius: 50%;
  border-bottom-left-radius: 50%;
  border-bottom-right-radius: 50%;
}

.eye.left {
  left: 25%;
}
.eye.right {
  right: 25%;
}
.eye-lid {
  width: 150%;
  height: 100%;
  background-color: var(--penguin-face);
  top: 25%;
  left: -23%;
  border-top-right-radius: 50%;
  border-top-left-radius: 50%;
  border-bottom-left-radius: 50%;
  border-bottom-right-radius: 50%;
}

.blush {
  width: 15%;
  height: 10%;
  background-color: pink;
  top: 65%;
  border-top-right-radius: 50%;
  border-top-left-radius: 50%;
  border-bottom-left-radius: 50%;
  border-bottom-right-radius: 50%;
}
.blush.left {
  left: 15%;
}
.blush.right {
  right: 15%;
}

.beak {
  height: 10%;
  background-color: var(--penguin-picorna);
  border-top-right-radius: 50%;
  border-top-left-radius: 50%;
  border-bottom-left-radius: 50%;
  border-bottom-right-radius: 50%;
}
.beak.top {
  width: 20%;
  top: 60%;
  left: 40%;
}
.beak.bottom {
  width: 16%;
  top: 65%;
  left: 42%;
}

/*===cuerpo del pinguino====*/
.penguin-body {
  width: 53%;
  height: 45%;
  background: linear-gradient(
    45deg,
    rgb(134, 133, 133) 0%,
    rgb(234, 231, 231) 25%,
    var(--penguin-face) 67%
  );
  border-radius: 80% 80% 100% 100%;
  top: 40%;
  left: 23.5%;
}
.penguin-body::before {
  /*dar al cuerpo del pingüino una cresta*/
  content: "";
  position: absolute;
  width: 50%;
  height: 45%;
  background-color: var(--penguin-skin);
  top: 10%;
  left: 25%;
  border-radius: 100%;
  border-top-right-radius: 0%;
  border-top-left-radius: 0%;
  opacity: 70%; /*transparencia del pseudoelemento*/
}

 /*:active de CSS representa un elemento (como un botón) que el usuario está activando. Cuando se usa un mouse, la "activación" generalmente comienza cuando el usuario presiona el botón primario del mouse y termina cuando se suelta. */
  /* Selecciona cualquier <a> que esté siendo activado 
a:active {
  color: red;
}*/
.penguin:active{
  transform: scale(1.5); /*define una transformación que cambia el tamaño de un elemento en el plano 2D. Debido a que la cantidad de escala está definida por un vector, puede cambiar el tamaño de las dimensiones horizontales y verticales en diferentes escalas.*/
  cursor: not-allowed;
  transition: 1s;
  transition-timing-function: ease-in-out;
  transition-delay: 0ms;

}

.shirt {
  font-size: 15px;
  font-family: Helvetica, sans-serif;
  font-weight: bold;
  top: 178px;
  left: 128.5px;
  z-index: 1;
  color: #952c6d; /**/
}
.shirt div {
  font: 25px Helvetica, sans-serif;
  top: 22.5px;
  left: 20px;
}

.arm {
  width: 18%;
  height: 34%;
  background: linear-gradient(90deg, var(--penguin-skin), rgb(209, 210, 199));
  border-top-left-radius: 30%;
  border-top-right-radius: 30%;
  border-bottom-right-radius: 30%;
  border-bottom-left-radius: 120%;
  z-index: -1;
}
.arm.left {
  left: 25%;
  top: 58%;
  transform-origin: top left; /*El origen de la transformación es el punto alrededor del cual se aplica una transformación.*/
  transform: rotate(130deg) scaleX(-1); /*Se invierte el eje x*/
  animation-name: wave;
  animation-duration: 3s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

.arm.right {
  right: 12%;
  top: 42%;
  transform: rotate(-45deg);
}

.foot {
  width: 10%;
  height: 25%;
  background-color: var(--penguin-picorna);
  top: 70%;
  border-radius: 50%;
  z-index: -1;
}

.foot.left {
  left: 30%;
  transform: rotate(75deg);
}

.foot.right {
  right: 30%;
  transform: rotate(-75deg);
}

.penguin * {
  /*Apunta a todos los elementos descendientes del elemento*/
  position: absolute;
}
/*========Fondo==========*/
.ground {
  width: 100vw;
  height: 400px;
  height: calc(100vh - 300px);
  background: linear-gradient(90deg, rgb(88, 175, 236), rgb(182, 255, 255));
  z-index: 3;
  position: absolute;
  margin-top: -58px;
}

.back-mountain {
  width: 300px;
  height: 300px;
  background: linear-gradient(rgb(203, 241, 228), rgb(47, 170, 255));
  position: absolute;
  z-index: 1;
  transform: rotate(45deg);
  left: 110px;
  top: 225px;
}

.sun {
  width: 200px;
  height: 200px;
  background-color: yellow;
  position: absolute;
  border-radius: 50%;
  right: -75px;
  top: -75px;
}

/*====ola del pinguino (para esto usamos animaciones CSS)=========*/

/*La regla @keyframes CSS controla los pasos intermedios en una secuencia de animación CSS definiendo estilos para fotogramas clave (o puntos de ruta) a lo largo de la secuencia de animación. Esto da más control sobre los pasos intermedios de la secuencia de animación que las transiciones .*/
@keyframes wave {
  10% {
    transform: rotate(110deg) scaleX(-1);
  }
  20% {
    transform: rotate(130deg) scaleX(-1);
  }
  30% {
    transform: rotate(110deg) scaleX(-1);
  }
  40% {
    transform: rotate(130deg) scaleX(-1);
  }
}



/*
sintaxis de las @keyframes

@keyframes slidein {
  from {
    transform: translateX(0%);
  }

  to {
    transform: translateX(100%);
  }
}
from
Un desplazamiento inicial de 0%.

to
Un desplazamiento final de 100%.
*/